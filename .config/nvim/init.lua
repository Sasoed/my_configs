-- üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ lazy.nvim (–µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)
local lazypath = vim.fn.stdpath("data") .. "/lazy/lazy.nvim"
if not vim.loop.fs_stat(lazypath) then
  vim.fn.system({
    "git", "clone", "--filter=blob:none",
    "https://github.com/folke/lazy.nvim.git",
    lazypath
  })
end
vim.opt.rtp:prepend(lazypath)

-- üì¶ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–≥–∏–Ω–æ–≤
require("lazy").setup({
  { "lambdalisue/suda.vim" },                          -- –ó–∞–ø–∏—Å—å –±–µ–∑ –ø—Ä–∞–≤
  { "preservim/nerdtree" },                            -- –§–∞–π–ª–æ–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä
  { "tpope/vim-fugitive" },                            -- Git-–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
  { "airblade/vim-gitgutter" },                        -- Git-–º–µ—Ç–∫–∏
  { "itchyny/lightline.vim" },                         -- –°—Ç–∞—Ç—É—Å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
  { "junegunn/fzf", build = "./install --all" },       -- FZF
  { "junegunn/fzf.vim", dependencies = { "junegunn/fzf" } }, -- FZF –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
  { "neoclide/coc.nvim", branch = "release" },         -- –ê–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
  { "ryanoasis/vim-devicons" },                        -- –ò–∫–æ–Ω–∫–∏
  { "morhetz/gruvbox" },                               -- –¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞
  { "ghifarit53/tokyonight-vim" },                     -- –¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞
  { "jiangmiao/auto-pairs" },                          -- –ê–≤—Ç–æ—Å–∫–æ–±–∫–∏
  { "fladson/vim-kitty" },                             -- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ kitty
})

-- ‚öôÔ∏è –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
local opt = vim.opt
opt.number = true
opt.relativenumber = true
opt.tabstop = 4
opt.shiftwidth = 4
opt.expandtab = true
opt.smartindent = true
opt.autoindent = true
opt.cursorline = true
opt.hidden = true
opt.scrolloff = 8
opt.signcolumn = "yes"
opt.termguicolors = true
opt.mouse = ""
opt.completeopt = { "menuone", "noinsert", "noselect" }
opt.clipboard:append("unnamedplus")

-- üõ°Ô∏è suda.vim
vim.g.suda_smart_edit = 1

-- üåà –°–∏–Ω—Ç–∞–∫—Å–∏—Å –∏ –ø–æ–≤–µ–¥–µ–Ω–∏–µ
vim.cmd("syntax on")
vim.cmd("filetype plugin indent on")

-- üé® –¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞
vim.g.tokyonight_style = "night"
vim.g.tokyonight_enable_italic = 1
vim.cmd("colorscheme tokyonight")

-- üìü lightline —Å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –ø–æ–ª–Ω–æ–≥–æ –ø—É—Ç–∏
_G.lightlinefilename = function()
  local path = vim.fn.expand('%:p')
  local home = vim.fn.expand('$HOME')
  return path:gsub(home, '~')
end

vim.g.lightline = {
  active = {
    left = {
      { 'mode', 'paste' },
      { 'readonly', 'filename', 'modified' }
    }
  },
  component_function = {
    filename = 'LightlineFilename'
  }
}

vim.cmd([[
  function! LightlineFilename() abort
    return v:lua.lightlinefilename()
  endfunction
]])

-- üß† coc.nvim
local keyset = vim.keymap.set
local opts = { silent = true, noremap = true, expr = true, replace_keycodes = false }

function _G.check_back_space()
  local col = vim.fn.col('.') - 1
  return col == 0 or vim.fn.getline('.'):sub(col, col):match('%s') ~= nil
end

keyset("i", "<TAB>", 'coc#pum#visible() ? coc#pum#next(1) : v:lua.check_back_space() ? "<TAB>" : coc#refresh()', opts)
keyset("i", "<S-TAB>", 'coc#pum#visible() ? coc#pum#prev(1) : "<C-h>"', opts)
keyset("i", "<CR>", 'coc#pum#visible() ? coc#pum#confirm() : "\\<C-g>u\\<CR>\\<c-r>=coc#on_enter()\\<CR>"', opts)
keyset("i", "<C-Space>", "coc#refresh()", { silent = true, expr = true })

-- üóÉÔ∏è NERDTree –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
vim.cmd([[
  autocmd StdinReadPre * let s:std_in = 1
  autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
]])

