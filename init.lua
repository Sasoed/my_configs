-- üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è vim-plug —á–µ—Ä–µ–∑ VimScript
vim.cmd([[
  call plug#begin('~/.local/share/nvim/plugged')

  Plug 'lambdalisue/suda.vim'                        " –ó–∞–ø–∏—Å—å –±–µ–∑ –ø—Ä–∞–≤
  Plug 'preservim/nerdtree'                          " –§–∞–π–ª–æ–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä
  Plug 'tpope/vim-fugitive'                          " Git-–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
  Plug 'airblade/vim-gitgutter'                      " Git-–º–µ—Ç–∫–∏
  Plug 'itchyny/lightline.vim'                       " –°—Ç–∞—Ç—É—Å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
  Plug 'junegunn/fzf', { 'do': './install --all' }   " –ü–æ–∏—Å–∫ fzf
  Plug 'junegunn/fzf.vim'                            " –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è fzf
  Plug 'neoclide/coc.nvim', { 'branch': 'release' }  " –ê–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
  Plug 'ryanoasis/vim-devicons'                      " –ò–∫–æ–Ω–∫–∏
  Plug 'morhetz/gruvbox'                             " –¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞ gruvbox
  Plug 'ghifarit53/tokyonight-vim'                   " –¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞ tokyonight
  Plug 'jiangmiao/auto-pairs'                        " –ê–≤—Ç–æ—Å–∫–æ–±–∫–∏

  call plug#end()
]])

-- ‚öôÔ∏è –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
vim.opt.number = true
vim.opt.relativenumber = true
vim.opt.tabstop = 4
vim.opt.shiftwidth = 4
vim.opt.expandtab = true
vim.opt.smartindent = true
vim.opt.autoindent = true
vim.opt.cursorline = true
vim.opt.hidden = true
vim.opt.scrolloff = 8
vim.opt.signcolumn = "yes"
vim.opt.termguicolors = true
vim.opt.mouse = ""
vim.opt.completeopt = { "menuone", "noinsert", "noselect" }
vim.opt.clipboard:append("unnamedplus")

-- üõ°Ô∏è suda.vim ‚Äî —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç root
vim.g.suda_smart_edit = 1

-- üåà –°–∏–Ω—Ç–∞–∫—Å–∏—Å –∏ –ø–æ–≤–µ–¥–µ–Ω–∏–µ
vim.cmd("syntax on")
vim.cmd("filetype plugin indent on")

-- üé® –¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞
vim.g.tokyonight_style = "night"
vim.g.tokyonight_enable_italic = 1
vim.cmd("colorscheme tokyonight")

-- üìü lightline —Å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –ø–æ–ª–Ω–æ–≥–æ –ø—É—Ç–∏
_G.lightlinefilename = function()
  local path = vim.fn.expand('%:p')
  local home = vim.fn.expand('$HOME')
  return path:gsub(home, '~')
end

vim.g.lightline = {
  active = {
    left = {
      { 'mode', 'paste' },
      { 'readonly', 'filename', 'modified' }
    }
  },
  component_function = {
    filename = 'lightlinefilename'
  }
}

-- üß† coc.nvim ‚Äî –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
local keyset = vim.keymap.set
local opts = { silent = true, noremap = true, expr = true, replace_keycodes = false }

function _G.check_back_space()
  local col = vim.fn.col('.') - 1
  return col == 0 or vim.fn.getline('.'):sub(col, col):match('%s') ~= nil
end

keyset("i", "<TAB>", 'coc#pum#visible() ? coc#pum#next(1) : v:lua.check_back_space() ? "<TAB>" : coc#refresh()', opts)
keyset("i", "<S-TAB>", 'coc#pum#visible() ? coc#pum#prev(1) : "<C-h>"', opts)
keyset("i", "<CR>", 'coc#pum#visible() ? coc#pum#confirm() : "\\<C-g>u\\<CR>\\<c-r>=coc#on_enter()\\<CR>"', opts)
keyset("i", "<C-Space>", "coc#refresh()", { silent = true, expr = true })

-- üóÉÔ∏è NERDTree ‚Äî –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
vim.cmd([[
  autocmd StdinReadPre * let s:std_in = 1
  autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
]])

